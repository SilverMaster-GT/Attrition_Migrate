import pyodbc
import cx_Oracle
import datetime
from decouple import config

def transfer_data():
    try:
        fecha_hora_actual = datetime.datetime.now()
        print("Inicio del Proceso de actualización:", fecha_hora_actual.strftime("%Y-%m-%d %H:%M:%S"))

        with pyodbc.connect(f'DRIVER={{ODBC Driver 17 for SQL Server}};'
                            f'SERVER={config("DB_HOST")};'
                            f'DATABASE={config("DB_DATABASE")};'
                            f'UID={config("DB_USERNAME")};'
                            f'PWD={config("DB_PASSWORD")}') as conn_sql:
            cursor_sql = conn_sql.cursor()

            cursor_sql.execute("SELECT * FROM BI_AlliedGlobal.OP.T_AttritionDatos")
            data = cursor_sql.fetchall()

        with cx_Oracle.connect(f'{config("DBORACLE_USERNAME")}/{config("DBORACLE_PASSWORD")}@'
                               f'{config("DBORACLE_HOST")}:{config("DBORACLE_PORT")}/'
                               f'{config("DBORACLE_SERVICE")}') as conn_oracle:
            cursor_oracle = conn_oracle.cursor()

            cursor_oracle.execute("TRUNCATE TABLE MAIN_RRHH.ATTRITION_ADMONITION")
            insert_query = "INSERT INTO MAIN_RRHH.ATTRITION_ADMONITION VALUES ({})".format(','.join([':' + str(i+1) for i in range(len(data[0]))]))

            cursor_oracle.executemany(insert_query, data)

            conn_oracle.commit()

        fecha_hora_actual = datetime.datetime.now()
        print("Fin del Proceso de actualización:", fecha_hora_actual.strftime("%Y-%m-%d %H:%M:%S"))
        print("Transferencia de datos completada exitosamente.")

    except pyodbc.Error as sql_err:
        print("Error al conectar con SQL Server:", sql_err)

    except cx_Oracle.Error as oracle_err:
        print("Error al conectar con Oracle:", oracle_err)

    except Exception as e:
        print("Error inesperado:", e)


transfer_data()
