import pyodbc
import cx_Oracle
import datetime
from decouple import config


def transfer_data():
    try:
        # Obtener la fecha y hora actual
        fecha_hora_actual = datetime.datetime.now()
        print("Inicio del Proceso de actualización:",
              fecha_hora_actual.strftime("%Y-%m-%d %H:%M:%S"))

        # Conexión a SQL Server
        conn_sql = pyodbc.connect(f'DRIVER={{ODBC Driver 17 for SQL Server}};'
                                  f'SERVER={config("DB_HOST")};'
                                  f'DATABASE={config("DB_DATABASE")};'
                                  f'UID={config("DB_USERNAME")};'
                                  f'PWD={config("DB_PASSWORD")};'
                                  )

        cursor_sql = conn_sql.cursor()

        # Consulta para obtener los datos
        cursor_sql.execute("SELECT * FROM BI_AlliedGlobal.OP.T_AttritionDatos")

        data = cursor_sql.fetchall()

        # Conexión a Oracle
        dsn_tns = cx_Oracle.makedsn(
            f'{config("DBORACLE_HOST")}', f'{config("DBORACLE_PORT")}', service_name=f'{config("DBORACLE_SERVICE")}')
        conn_oracle = cx_Oracle.connect(
            user=f'{config("DBORACLE_USERNAME")}', password=f'{config("DBORACLE_PASSWORD")}', dsn=dsn_tns)

        separacion10K = 1
        count = 0
        query = []

        # Acumulador de queries como una cadena
        all_queries = ''

        # Insertar los datos en Oracle
        for row in data:
            if count % 10000 == 0:
                separacion10K += 1
                count = 0
            count += 1
            # Convertir los valores de la fila a strings y unirlos con comas
            # Convertir los valores de la fila a strings y unirlos con comas
            values_str = ",".join(map(lambda x: f"'{x}'", row))
            query = f"INSERT INTO MAIN_RRHH.ATTRITION_ADMONITION VALUES ({values_str}); "
            # Agregar la consulta a la lista de queries
            all_queries[separacion10K] = all_queries[separacion10K] + query

        # with open("archivo.txt", "w") as archivo:
        #     # Escribe el string en el archivo
        #     archivo.write(all_queries)

        cursor_oracle = conn_oracle.cursor()
        # Ejecutar todos los queries en una sola transacción
        # cursor_oracle.execute(
        #             "TRUNCATE TABLE MAIN_RRHH.ATTRITION_ADMONITION")
        for i in range(1, separacion10K+1):
            cursor_oracle.execute(all_queries[i])

        # Confirmar la transacción
        conn_oracle.commit()

        # Cerrar las conexiones
        cursor_sql.close()
        conn_sql.close()
        cursor_oracle.close()
        conn_oracle.close()

        # Obtener la fecha y hora actual
        fecha_hora_actual = datetime.datetime.now()
        print("Fin del Proceso de actualización:",
              fecha_hora_actual.strftime("%Y-%m-%d %H:%M:%S"))
        print("Transferencia de datos completada exitosamente.")

    except pyodbc.Error as sql_err:
        print("Error al conectar con SQL Server:", sql_err)

    except cx_Oracle.Error as oracle_err:
        print("Error al conectar con Oracle:", oracle_err)

    except Exception as e:
        print("Error inesperado:", e)


transfer_data()
